# VMWARE 설정

1. 칼리리눅스 설정에서 랜카드1은 NAT, 랜카드2 추가하여 LAN Segment 선택 후 VLAN_SER 추가 선택
2. Centos 서버에서 랜카드를 LAN Segment 선택 후 VLAN_SER 추가 선택

# 칼리리눅스 화면 우측 상단에서 오른 클릭하고 시간설정, 전원설정

# Kali Linux 인라인 구성 (리눅스 방화벽 만들기)

# 터미널 창을 열고 다음을 Ctrl+C, Ctrl+V 하여 작업

# vi 명령어 설명 (vi : 리눅스 기본 편집기 - 메모장과 같은 도구)

a - 편집 모드로 들어가기 - 하단에 -- INSERT -- 라고 표시되면 편집 모드임.
esc - 편집이 끝나면 누름.
/ - 검색 기능
:wq - 저장하고 vi에서 나오기.
ctrl+shift+V - 붙여넣기

# Network-Manager 사용중지 - 

systemctl stop NetworkManager.service
systemctl disable NetworkManager.service

# 방화벽 #################################################

apt install apache2
apt install ssh

systemctl start apache2
systemctl enable apache2

systemctl start ssh
systemctl enable ssh

[방화벽 초기 설정]

iptables -L # iptables 리스트 보기 (list)

iptables -F # iptables 초기화 (flush)

iptables -P INPUT DROP

iptables -A INPUT -j DROP

[ 패킷의 목적지또는 출처 제어 ]

iptables -A INPUT -s 192.168.116.1 -j ACCEPT

iptables -A INPUt -d 192.168.10.12 -j DROP

[ 프로토콜 제어 ]

iptables -A INPUT -p tcp --dport 80 -j DROP

※ 여러 포트를 지정해야 된다면 --dport 1024:65535 와 같이 지정할수있다. 
뜻은 1024 부터 65535번까지라는 뜻이다.

[ 인터페이스 지정 ]

iptables -A INPUT -i eth0 -p tcp --dport 80 -j DROP

문제 : INPUT 체인에 -- 입력인터페이스가 eth0이고 도착지가 192.168.116.128이고
프로토콜은 tcp이며 도착 포트는 80(www)인 패킷은 DROP시켜라.

iptables -A INPUT -i eth0 -d 192.168.116.128 -p tcp --dport 80 -j DROP

iptables -A OUTPUT -o eth0 -d 125.132.9.212 -p tcp --dport 80 -j DROP

# SNORT ##################################################

# eth0 자동 IP 설정, eth1 수동IP 설정

vi /etc/network/interfaces

auto eth0
iface eth0 inet dhcp

auto eth1
iface eth1 inet static
address 192.168.1.1
netmask 255.255.255.0
network 192.168.1.0
broadcast 192.168.1.255
dns-nameservers 8.8.8.8

:wq

# ip 포워딩 설정

vi /etc/sysctl.conf

net.ipv4.ip_forward=1

:wq

# nat, port 포워딩 설정

iptables -A FORWARD -i eth1 -j ACCEPT

iptables -A FORWARD -o eth1 -j ACCEPT

iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE

iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 8080 -j DNAT --to 192.168.100.1:88

※ 이 규칙은 방화벽/게이트웨이 뒤에 위치한 시스템이 내부 네트워크에 접근할 수 있도록 설정합니다.
게이트웨이는 한 LAN 네트워크로부터 들어오는 모든 패킷을 eth1 장치를 통해 대상 네트워크로 라우팅할 것입니다.
이렇게 함으로서 LAN 상의 시스템들이 서로 통신할 수 있게 됩니다; 그러나 인터넷과 같은 외부 시스템과의 통신은 허용되지 않습니다.

iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE

※ LAN 상의 시스템이 가상 IP 주소를 가지고 외부 공중 네트워크와 통신할 수 있도록 허용하시려면,
LAN 시스템에서 외부로 향하는 요청이 방화벽 외부 장치(이 예시에서는 eth0)의 IP 주소로 나가도록 방화벽에 IP masquerading 기능을
설정하십시오

각 웹서버의 터미널에서
cd /etc/udev/rules.d
rm -rf 70-persistent-net.rules
reboot

iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 8080 -j DNAT --to 192.168.100.1:88

iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 8181 -j DNAT --to 192.168.100.2:88
iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 8282 -j DNAT --to 192.168.100.3:88
iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 8383 -j DNAT --to 192.168.100.4:88

1. NAT (Network Address Traslation)
	NAT는 외부 네트워크와 다른 IP를 사용하는 내부 내트워크에서 IP 주소를 변환하는 것입니다. 
	NAT는 2개의 CHAIN 을 포함하는데 PREROUTING  POSTROUTING이다. 
2. PREROUTING
	PREROUTING은 DNAT(Destnation NAT) 즉,  외부 IP를 내부의 사설 IP 로 포워딩 하는 경우 사용 합니다. 
3. POSTROUTING
	POSTROUTING은 SNAT(Source NAT)즉, 내부 사설 IP 를 외부 공인 IP로 변환할 때 사용 합니다. 

# iptables 설정 저장 (메모리에 임시 저장된 iptables를 파일로 저장)

/sbin/iptables-save > /etc/iptables.rules

# 부팅시 자동으로 iptables가 구동되도록 설정

vi /etc/network/if-pre-up.d/iptables-restore

#!/bin/bash
cat /etc/iptables.rules
/sbin/iptables-restore < /etc/iptables.rules

:wq

# 권한 주기

chmod 755 /etc/network/if-pre-up.d/iptables-restore

reboot

# 칼리 터미널창에서 내부 서버(192.168.1.200) 열린 TCP 포트 스캔

nmap -sT 192.168.1.201



# 칼리 eth0 IP 확인후 메모 (Snort 설치시 필요)

ifconfig

------------------------------------------------------------------------------------------------

# Snort 설치

apt-get update

apt-get install snort -y

# Rule 다운로드, 업데이트#

cd /tmp

wget ftp://10.0.0.4/snortrules-snapshot-29110.tar.gz

wget https://rules.emergingthreats.net/open/snort-2.9.0/emerging.rules.tar.gz

tar -zxvf snortrules-snapshot-29110.tar.gz

tar -zxvf emerging.rules.tar.gz

cp rules/* /etc/snort/rules/

# Rule 경로 지정

vi /etc/snort/snort.conf

# output unified2: filename snort.u2, limit 128

/include $RULE_PATH/

include $RULE_PATH/emerging-ftp.rules
include $RULE_PATH/emerging-games.rules
include $RULE_PATH/emerging-pop3.rules
include $RULE_PATH/emerging-activex.rules
include $RULE_PATH/emerging-rpc.rules
include $RULE_PATH/emerging-icmp.rules
include $RULE_PATH/emerging-scan.rules
include $RULE_PATH/emerging-scada.rules
include $RULE_PATH/emerging-voip.rules 
include $RULE_PATH/emerging-chat.rules
include $RULE_PATH/emerging-icmp_info.rules
include $RULE_PATH/emerging-shellcode.rules
include $RULE_PATH/emerging-web_client.rules 
include $RULE_PATH/emerging-imap.rules
include $RULE_PATH/emerging-web_server.rules 
include $RULE_PATH/emerging-current_events.rules
include $RULE_PATH/emerging-inappropriate.rules
include $RULE_PATH/emerging-smtp.rules
include $RULE_PATH/emerging-web_specific_apps.rules 
include $RULE_PATH/emerging-deleted.rules
include $RULE_PATH/emerging-malware.rules
include $RULE_PATH/emerging-snmp.rules
include $RULE_PATH/emerging-worm.rules 
include $RULE_PATH/emerging-misc.rules
include $RULE_PATH/emerging-sql.rules                 
include $RULE_PATH/emerging-dos.rules
include $RULE_PATH/emerging-netbios.rules
include $RULE_PATH/emerging-telnet.rules              
include $RULE_PATH/emerging-exploit.rules
include $RULE_PATH/emerging-p2p.rules
include $RULE_PATH/emerging-tftp.rules  
include $RULE_PATH/emerging-mobile_malware.rules  
include $RULE_PATH/emerging-info.rules  
include $RULE_PATH/emerging-botcc.rules
include $RULE_PATH/emerging-compromised.rules
include $RULE_PATH/emerging-drop.rules
include $RULE_PATH/emerging-dshield.rules
include $RULE_PATH/emerging-tor.rules
include $RULE_PATH/emerging-ciarmy.rules

:wq

chmod 755 /var/log/snort

# Snort 실행

snort -c /etc/snort/snort.conf -i eth0

# 로그 확인

cat /var/log/snort/alert

# 시그니처 검색

https://www.snort.org/docs

https://threatintel.proofpoint.com/

------------------------------------------------------------------------------

Barnyard2 설치 (Snort 로그를 Snorby로 넘겨주는 모듈)

apt-get install libpcap-dev default-libmysqlclient-dev -y

cd /tmp

wget http://ftp.psu.ac.th/pub/snort/barnyard2-1.9.tar.gz

tar xvfz barnyard2-1.9.tar.gz

cd barnyard2-1.9

./configure --with-mysql --with-mysql-libraries=/usr/lib/x86_64-linux-gnu

make && make install

cp /usr/local/etc/barnyard2.conf /etc/snort/

mkdir /var/log/barnyard2

chmod 666 /var/log/barnyard2

touch /var/log/snort/barnyard2.waldo

chown snort.snort /var/log/snort/barnyard2.waldo

cat > /etc/snort/barnyard2.conf
config reference_file:      /etc/snort/reference.config
config classification_file: /etc/snort/classification.config
config gen_file:            /etc/snort/gen-msg.map
config sid_file:            /etc/snort/sid-msg.map
config logdir: /var/log/snort
config hostname:  snort-ids
config interface:  eth0
config waldo_file: /var/log/snort/barnyard2.waldo
input unified2
output database: log, mysql, user=snorby password=snorby dbname=snorby host=192.168.1.200

ctrl + d

# Barnyard2 실행

barnyard2 -c /etc/snort/barnyard2.conf -d /var/log/snort -f snort.u2 -w /var/log/snort/barnyard2.waldo

# Snorby 실행

root
mode1752

cd /opt/snorby-master

rails server thin -e production

# Snorby WebGUI 접속하기

Kali 웹브라우저에서 http://192.168.1.200:3000

snorby@example.com
snorby
