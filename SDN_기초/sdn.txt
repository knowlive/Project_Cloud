1.11.90.45

hali20
mode2816!

loopback 선택하고 wireshark들어가기

sudo mn // mininet 들어가기
ping all // 모든 ping을 확인한다.

SDN 프로토콜 : openflow를 많이 쓴다.

SDN 스위치에 있는 엔트리에 없으면 아무리 스위치로 PC가 연결되어있어도 통신할 수 없음.
모든 것은 SDN 컨트롤러가 다 엔트리를 통해서 패킷을 송수신한다.

계속 ping 하고 있으면 엔트리가 지워져도 계속 받기 때문에 송수신가능하다.

mininet edit 는 gui로 보여주는 것 뿐, 실제로는 terminal에서 이루어지고 있음. (상상으로) 가시성을 위해 보여주는 것뿐.
만약 entry가 없으면 dpctl로 flow를 넣어준다.
------------------------------------

nox - c언어 중심으로 짠 것. 성능 면에서 좋음
pox - python으로 짠 것. 연구소용

-------------------------------------------
SDN application plan

SDN control plan (library : openflow 프로토콜로 만든 L3, L2, DHCP등등... DB저장 = 이럴때 pox로 연구해서 씀)

SDN (switch) data plan 
--------------------------------------------

hub는 수신자, 발신자 모두 any라고 할 수 있다.

pox hub로 켜면서(desktop/home/hali/pox/)경로로 run 하면, fowarding hub라고 terminal에 뜬다.

*mininet으로 pox.mn으로 mininet에 들어가면 controller가 없는 상태
(mininet에 내재된 OpenFlow Reference가 아니라 remote Controller로 연결됨). 

!!! 그러나 그 이유는 pox로 이미 들어가 있어서 pox를 remote controller로 받아들여서 그런 것!

mininet terminal에서 진행해보기 -> mininet>nodes / links / h1 ping h3 / 등등...

[CMD에서 확인해보기]
dpctl dump-flows tcp:127.0.0.1:6654

(idle_timeout=0, harde_timeout=0, actions=FLOOD -> 끊기는 시간 없이 바로 패킷을 뿌려주라. (0이고 Flood임) ) 

mininet 초기화 : sudo mn -c (꼭 끝나고 나면 이걸 해줘야 남아있는 mininet연결 끊을 수 있음)

default는 60초라서! 그 이상은 터져서 안나옴.

****************************************

L2 같은 경우, 확인할 때, pingall을 해줘야지만 살아있는 통신한 기록을 볼 수 있음(통신한 게 없다면 CMD에 아무것도 안뜸!)

******************************************

spanning tree가 없으면 multi L2 switch는 계속 루프를 돈다. 어디로 가야될지 몰라서! (그래서 pingall을 칠 때도 늦게 나온다.)
custom script 로 그 안에 ppt의 명령어를 넣어주어야 한다.
openflow.discovery forwarding.l2_multi / openflow.spanning_tree
***************************************

L3 는 가상으로 우리가 IP를 줘야한다.(VLAN주듯이!) 10.0.0.1,192.168.0.1 로 중간에 넣어주고 run하기
스위치에 flow table보기 : sudo ovs-ofctl dump-flows s1 -> 이건 직접 switch에 들어가서 console로 확인한 것.
(switch와 controller가 같은 127.0.0.1에 있기에 어느 게 어느건지 모를 시)
==========================
